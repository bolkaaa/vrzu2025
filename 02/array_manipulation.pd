#N canvas 827 239 527 327 12;
#N canvas 0 0 450 250 (subpatch) 0;
#X array whatever_between_60_and_440 8 float 2;
#X coords 0 440 8 60 200 140 1;
#X restore 111 203 graph;
#X msg 116 403 7;
#X obj 111 603 nbx 29 100 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #e4e4e4 #373737 #373737 0 256;
#X obj 150 475 hradio 20 1 0 8 empty empty empty 0 -8 0 10 #e4e4e4 #4d4d4d #373737 0;
#X obj 111 572 tabread whatever_between_60_and_440;
#X text 111 136 remember how did we read short sized arrays (8 size) using tabread ?, f 31;
#X text 116 358 this is message. it can bear any type of value (numeric \, string \, list \, even bang!);
#X msg 1255 178 bang;
#X obj 1353 178 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737;
#X obj 1255 221 openpanel;
#X text 1315 177 =;
#X obj 1255 308 soundfiler;
#N canvas 0 0 450 250 (subpatch) 0;
#X array waveform 8.3714e+06 float 2;
#X coords 0 1 8.3714e+06 -1 200 140 1;
#X restore 1437 178 graph;
#X msg 1255 263 read -resize \$1 waveform;
#X text 1255 381 size of waveform array will be:;
#X obj 1255 409 nbx 38 65 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #e4e4e4 #373737 #373737 0 256;
#X text 1254 602 depending on your sample rate \, audio of 1 second is:;
#X obj 1255 632 samplerate~;
#X text 150 440 this outputs float from 0 - 7;
#X obj 404 409 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737;
#X obj 404 449 float 3;
#X obj 1254 669 nbx 39 66 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #e4e4e4 #373737 #373737 0 256;
#X text 1254 483 samples (waveform array resized dynamically since we have used -resize parameter in that message coming into soundfiler object)..., f 34;
#X text 1195 886 so your sound read into waveform array has this duration in seconds:;
#X obj 1195 801 pack f f;
#X obj 1195 589 t f b;
#X obj 1195 851 /;
#X obj 1195 915 nbx 39 66 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #e4e4e4 #373737 #373737 0 256;
#X text 827 740 pack does compose a message:;
#X obj 827 854 /;
#X obj 827 915 nbx 21 69 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #e4e4e4 #373737 #373737 0 256;
#X msg 827 805 441000 44100;
#X obj 578 854 / 44100;
#X msg 578 803 441000;
#X obj 578 915 nbx 21 69 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #e4e4e4 #373737 #373737 0 256;
#X text 578 740 yes you can click on a message in run mode... it does behave just as UI objects..., f 27;
#X msg 827 771 number_of_audio_samples_you_loaded_in samplerate;
#N canvas 0 50 450 300 better_explanation 0;
#X obj 111 185 bng 23 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737;
#X text 32 161 they seem to blink at once... but this was actually first:;
#X obj 110 255 float 0;
#X obj 110 321 nbx 34 116 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #e4e4e4 #373737 #373737 0 256;
#X text 167 258 thats why 0 have been overwritten by 161 before hot inlet triggered it forward....;
#X obj 961 108 t b f;
#X obj 961 385 float 0;
#X msg 961 49 999;
#X text 961 136 check help for this object so it's less confusing...;
#X text 1017 384 thanks to trigger object and it's right-to-left order execution we have overidden 0 default parameter of float just in time...;
#X msg 110 96 50;
#X obj 110 126 trigger b f;
#X obj 441 199 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737;
#X obj 402 162 delay 5000;
#X obj 402 136 t b f;
#X msg 275 96 1000;
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X connect 5 0 6 0;
#X connect 5 1 6 1;
#X connect 6 0 3 0;
#X connect 7 0 5 0;
#X connect 10 0 11 0;
#X connect 11 0 0 0;
#X connect 11 1 2 1;
#X connect 13 0 12 0;
#X connect 14 0 13 0;
#X connect 14 1 13 1;
#X connect 15 0 14 0;
#X restore 870 693 pd better_explanation;
#X text 870 588 trigger object (or t) is introduced here for data execution order... the very left outlet or inlet is called "hot" because it also continues forward while the others on the right are just set as parameters and execution won't continue without hot inlet being sent., f 42;
#N canvas 0 0 450 250 (subpatch) 0;
#X array copy 8 float 2;
#X coords 0 440 8 60 200 140 1;
#X restore 388 203 graph;
#X obj 641 440 tabwrite copy;
#X obj 641 405 tabread whatever_between_60_and_440;
#X msg 641 204 0 \, 7 1000;
#X obj 641 288 round;
#X obj 641 323 t f f;
#X text 641 123 "ramp" from 0 to 7 in one second;
#X msg 751 323 120 4;
#X text 804 322 write 120 at the index of 4;
#X obj 703 289 nbx 4 18 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #e4e4e4 #373737 #373737 0 256;
#X text 760 288 we need a whole number for table index so rounding is a must!;
#N canvas 0 50 450 300 audio_in_arrays 1;
#X obj 239 315 line~;
#N canvas 0 0 450 250 (subpatch) 0;
#X array cos_in_array 44100 float 2;
#X coords 0 1 44100 -1 200 140 1;
#X restore 315 86 graph;
#X obj 239 350 cos~;
#X obj 136 404 tabwrite~ cos_in_array;
#X obj 228 149 t l b;
#X msg 88 86 0 \, 1 1000;
#X obj 554 130 cos~;
#X obj 554 206 tabread4~ cos_in_array;
#X obj 88 54 loadbang;
#X text 88 28 bang at the initialization of the patch;
#N canvas 0 0 450 250 (subpatch) 0;
#X array phasor 44100 float 4;
#X coords 0 1 44099 0 302 190 1;
#X restore 788 263 graph;
#X obj 788 149 tabwrite~ phasor;
#X obj 788 92 bng 25 250 50 0 empty empty empty 17 7 0 10 #e4e4e4 #4d4d4d #373737;
#N canvas 0 0 450 250 (subpatch) 0;
#X array phasor_reads_cos 44100 float 2;
#X coords 0 1 44100 -1 303 213 1;
#X restore 787 494 graph;
#X obj 788 191 tabwrite~ phasor_reads_cos;
#X obj 554 86 phasor~ 2;
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X connect 4 0 0 0;
#X connect 4 1 3 0;
#X connect 5 0 4 0;
#X connect 6 0 7 0;
#X connect 6 0 14 0;
#X connect 8 0 5 0;
#X connect 12 0 11 0;
#X connect 12 0 14 0;
#X connect 15 0 6 0;
#X connect 15 0 11 0;
#X restore 870 484 pd audio_in_arrays;
#X obj 641 237 line;
#X connect 1 0 4 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 7 0 9 0;
#X connect 8 0 9 0;
#X connect 9 0 13 0;
#X connect 11 0 15 0;
#X connect 13 0 11 0;
#X connect 15 0 25 0;
#X connect 17 0 21 0;
#X connect 19 0 20 0;
#X connect 20 0 4 0;
#X connect 21 0 24 1;
#X connect 24 0 26 0;
#X connect 25 0 24 0;
#X connect 25 1 17 0;
#X connect 26 0 27 0;
#X connect 29 0 30 0;
#X connect 31 0 29 0;
#X connect 32 0 34 0;
#X connect 33 0 32 0;
#X connect 41 0 40 0;
#X connect 42 0 51 0;
#X connect 43 0 44 0;
#X connect 43 0 3 0;
#X connect 44 0 41 0;
#X connect 44 1 40 1;
#X connect 46 0 40 0;
#X connect 51 0 43 0;
#X connect 51 0 48 0;
